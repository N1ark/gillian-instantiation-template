(* PMap (LocationIndex) (Exclusive) *)

spec test_store(x, a)
  [[ (x == #x) * (a == #a) * <ex>(#a;#any) ]]
  [[ (ret == null) * <ex>(#a;#x) ]]
  normal
proc test_store(x, a) {
  e := [store](a, x);
  ret := null;
  return
};

spec test_store_domainset(x, a)
  [[ (x == #x) * (a == #a) * <ex>(#a;#any) * <domainset>(;-{#a}-) ]]
  [[ (ret == null) * <domainset>(;-{#a}-) * <ex>(#a;#x) ]]
  normal
proc test_store_domainset(x, a) {
  e := [store](a, x);
  ret := null;
  return
};

spec test_invalid_store(x, a)
  [[ (x == #x) * (a == #a) ]]
  [[ (ret == null) ]]
  normal
proc test_invalid_store(x, a) {
  e := [store](a, x);
  ret := null;
  return
};

spec test_load(a)
  [[ (a == #a) * <ex>(#a;#any) ]]
  [[ (ret == {{ #any }}) * <ex>(#a;#any) ]]
  normal
proc test_load(a) {
  x := [load](a);
  ret := x;
  return
};

spec test_invalid_load(a)
  [[ (a == #a) ]]
  [[ (ret == {{ #any }}) ]]
  normal
proc test_invalid_load(a) {
  x := [load](a);
  ret := x;
  return
};

spec test_alloc_no_domainset()
  [[ emp ]]
  [[ (ret == {{#a}}) * <ex>(#a;undefined) ]]
  normal
proc test_alloc_no_domainset() {
  e := [alloc]();
  ret := e;
  return
};

spec test_alloc_domainset()
  [[ <domainset>(;-{#a}-) ]]
  [[ (ret == {{#b}}) * <ex>(#b;undefined) * <domainset>(;-{#a, #b}-) ]]
  normal
proc test_alloc_domainset() {
  e := [alloc]();
  ret := e;
  return
};
